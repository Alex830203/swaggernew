{
  "swagger": "2.0",
  "info": {
    "description": "# **Overview**\n *This page describes the request sent to eBET by the channel to obtain the relevant records.*\n \n There are two ways to manage player money: single wallet and transfer wallet.\n \"transfer wallet\" : The player's money is managed by eBET.\n \"single wallet\" : The player's money is managed by the channel.\n API will also provide use according to the management method.\n **All APIs of a single wallet must be implemented.**\n \n# **About the recharge process**\n *Only available for transfer wallets*\n \n **eBET recharge process:**\n 1. Use the API:userinfo to check the user's current balance.\n 2. Use the API:recharge to complete the in/out transfer for users.\n<code>The following actions must be done whether the recharge is successful or not.</code>\n 3. Use the API:rechargestatus to check whether the recharge is completed and whether eBET recorded the recharge transaction number.\n P.S. When you do any operation on eBET (ex: login to eBET game, send API request to eBET), and if you receive http status code errors (ex: 403, 502, 504... etc.) or any other errors that are not listed above, please contact eBET staff for assistance.\n<div style=\"text-align:center;\"><img src=\"img/recharge_en.png\" style=\"width: 70%;\"></div>\n \n# **About OAuth login process**\n *This is provided for channels that want to use their own login page to verify user login*\n \n **Prior setting**\n ＊ Implement API: callback and OAuth JS Window frame\n ＊ Provide a link to eBET\n \n **Flow Description**\n 1. The user logs in to the eBET platform and clicks the login button to jump to the link provided for verification login.\n 2. After successful verification, send an API: callback request notification to eBET.\n 3. After receiving the response, close the page with OAuth JS Window frame .\n \n# **eBET response status code explanation**\n 
    <table id=\"tg-dx1DP\" class=\"tg\">\n
        <tr>\n
            <th class=\"tg-0uei\">Status Code</th>\n
            <th class=\"tg-0uei\">Description</th>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>-1</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Recharge record no exist</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>0</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Recharging</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>200</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Successful</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>201</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Repeated rechargeId</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>202</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Channel no exist</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>203</code></td>\n
            <td class=\"tg-0pky\">&nbsp;RechargeId can't null</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>204</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Recharge money can't null</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>205</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Recharge money too small</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>207</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Refund Money Inconsistent</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>208</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Record is not existed</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>209</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Check record already refund</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>401</code></td>\n
            <td class=\"tg-0pky\">&nbsp;User or password error</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>410</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Token error</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>500</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Server error</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>505</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Channel under maintenance</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4003</code></td>\n
            <td class=\"tg-0pky\">&nbsp;System busy, try back later</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4025</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Parameter error</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4026</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Signature error</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4027</code></td>\n
            <td class=\"tg-0pky\">&nbsp;IP is not authorized</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4028</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Trial user can’t recharge credit</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4029</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Function disable</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4030</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Data type error</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4037</code></td>\n
            <td class=\"tg-0pky\">&nbsp;User not existence</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4038</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Frequent request</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>4202</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Visit count no enough</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>5001</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Recharge failed</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>5002</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Not enough cash(Or the account has been banned and also forbidden to withdraw money)</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>5003</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Sub channel no exist</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>5005</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Wallet not enabled
            </td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>5006</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Unable to extract in the game</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>5009</code></td>\n
            <td class=\"tg-0pky\">&nbsp;The game is not open (This error code now only happen when not applicable official slot)</td>\n
        </tr>\n
        <tr>\n
            <td class=\"tg-0pky\">&nbsp;<code>5010</code></td>\n
            <td class=\"tg-0pky\">&nbsp;Channel currency request parameter not apply for the channel setting</td>\n
        </tr>\n
    </table>\n",
    "version": "1.0.0",
    "title": "Channel request"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/ITtoppathsupport/test01/1.0.0",
  "tags": [{
    "name": "API used by transfer wallet",
    "description": "eBET provides several APIs for transfer wallet."
  }, {
    "name": "API used by single wallet",
    "description": "eBET provides an API for single wallet."
  }, {
    "name": "Common API",
    "description": "APIs that any wallet can use."
  }],
  "schemes": ["http"],
  "paths": {
    "/api/recharge": {
      "post": {
        "tags": ["API used by transfer wallet"],
        "summary": "reharge",
        "description": "This API notifies eBET to process when the user's wallet amount is changed.\n Note: It returns success to indicate that a notification has been received, but processing is not complete.\n Note: There is no upper limit. \n Note: The ebet amount is only calculated to the second decimal place",
        "operationId": "recharge",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "rechargeReqId": {
                  "$ref": "#/definitions/rechargeReqId"
                },
                "money": {
                  "type": "number",
                  "format": "double",
                  "example": 100.0,
                  "description": "User's current amount."
                }
              }
            }
          }
        }
      }
    },
    "/api/rechargestatus": {
      "post": {
        "tags": ["API used by transfer wallet"],
        "summary": "rechargestatus",
        "description": "This API is to check whether eBET has received and processed the recharge request.",
        "operationId": "rechargestatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_1"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "rechargeReqId": {
                  "$ref": "#/definitions/rechargeReqId"
                }
              }
            }
          }
        }
      }
    },
    "/api/getusermoney": {
      "post": {
        "tags": ["API used by transfer wallet"],
        "summary": "getusermoney",
        "description": "This api is to query the current amount of money for users who have logged in within a period of time.\n Note: Because the amount of data may be too large, it is recommended to bring the following parameters when requesting to reduce the query time.\n (startTimeStr, endTimeStr, pageNum, pageSize)",
        "operationId": "getusermoney",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_2"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "results": {
                  "type": "object",
                  "description": "Record.",
                  "properties": {
                    "username": {
                      "$ref": "#/definitions/username"
                    },
                    "money": {
                      "type": "number",
                      "format": "double",
                      "example": 543.21,
                      "description": "User's money"
                    },
                    "wallet": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/wallet"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/getseqnorecord": {
      "post": {
        "tags": ["API used by single wallet"],
        "summary": "getseqnorecord",
        "description": "This api is query failed seqNo in eBET database.",
        "operationId": "getseqnorecord",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_3"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "count": {
                  "$ref": "#/definitions/count"
                },
                "remainingVisit": {
                  "$ref": "#/definitions/remainingVisit"
                },
                "seqNoHistorys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Balance of each wallet.",
                    "properties": {
                      "seqNo": {
                        "type": "string",
                        "example": "a698facaf47c80b784e116524c20bbf1",
                        "description": "Record seqNo"
                      },
                      "username": {
                        "type": "string",
                        "example": "apitest01",
                        "description": "Record username"
                      },
                      "event": {
                        "type": "string",
                        "example": "increaseCredit",
                        "description": "Record apiName"
                      },
                      "startRequestTime": {
                        "type": "string",
                        "example": "2020-01-01T00:00:00Z",
                        "description": "Request sent time"
                      },
                      "endResponseTime": {
                        "type": "string",
                        "example": "2020-01-01T00:00:10Z",
                        "description": "Response end time"
                      },
                      "status": {
                        "type": "integer",
                        "example": 4025,
                        "description": "Record status code"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/syncuser": {
      "post": {
        "tags": ["Common API"],
        "summary": "syncuser",
        "description": "New player registration",
        "operationId": "syncuser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_4"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                }
              }
            }
          },
          "401": {
            "description": "The account has been registered."
          }
        }
      }
    },
    "/api/userinfo": {
      "post": {
        "tags": ["Common API"],
        "summary": "userinfo",
        "description": "Query user information",
        "operationId": "userinfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_5"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "channelId", "money", "status", "subChannelId", "userId", "username", "wallet"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "channelId": {
                  "$ref": "#/definitions/channelId"
                },
                "subChannelId": {
                  "$ref": "#/definitions/subChannelId"
                },
                "username": {
                  "$ref": "#/definitions/username"
                },
                "userId": {
                  "type": "integer",
                  "format": "int64",
                  "example": 19191919,
                  "description": "User ID"
                },
                "money": {
                  "type": "number",
                  "format": "double",
                  "example": 0,
                  "description": "User's money"
                },
                "wallet": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/wallet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userbethistory": {
      "post": {
        "tags": ["Common API"],
        "summary": "userbethistory",
        "description": "This API is for querying bets recorded in a specific time period.\n Note 1: Because the amount of data may be too large, it is recommended to bring the following parameters when requesting to reduce the query time.\n (startTimeStr, endTimeStr, pageNum, pageSize)\n Note 2: It is recommended to bring the following parameters **betStatus:1** query only successful records.",
        "operationId": "userbethistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_6"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "betHistories", "count", "remainingVisits", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "count": {
                  "$ref": "#/definitions/count"
                },
                "remainingVisits": {
                  "$ref": "#/definitions/remainingVisit"
                },
                "betHistories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/betHistories"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/getcurrentluzhu": {
      "post": {
        "tags": ["Common API"],
        "summary": "getcurrentluzhu",
        "description": "The 30 game records that have ended so far and converted into luzhu information",
        "operationId": "getcurrentluzhu",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_7"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "count", "remainingVisits", "status", "tableCode", "tableSubType", "tableType"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "count": {
                  "$ref": "#/definitions/count"
                },
                "remainingVisits": {
                  "$ref": "#/definitions/remainingVisit"
                },
                "tableType": {
                  "$ref": "#/definitions/tableType"
                },
                "tableSubType": {
                  "$ref": "#/definitions/tableSubType"
                },
                "tableCode": {
                  "type": "string",
                  "example": "B1",
                  "description": "Game table number"
                },
                "luzhuList": {
                  "type": "array",
                  "example": [
                    [68]
                  ],
                  "description": "Flop of each round. This parameter will only appear when count> 0.",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "luzhuStat": {
                  "type": "array",
                  "example": [
                    ["draw"]
                  ],
                  "description": "Status of each round. This parameter will only appear when count> 0.",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/getbetlimit": {
      "post": {
        "tags": ["Common API"],
        "summary": "getbetlimit",
        "description": "Get user bet limit in each game",
        "operationId": "getbetlimit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_8"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "channelId", "limit", "status", "username"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "username": {
                  "$ref": "#/definitions/username"
                },
                "channelId": {
                  "$ref": "#/definitions/channelId"
                },
                "limit": {
                  "type": "array",
                  "description": "Limit List",
                  "items": {
                    "type": "object",
                    "properties": {
                      "gameType": {
                        "type": "integer",
                        "example": 1,
                        "description": "Game type.\n 1:Baccarat - VIP table\n 2:Baccarat - Normal table\n 3:Dragon Tiger\n 4:Sic Bo\n 5:Roulette"
                      },
                      "playerMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "Player minimum bet limit.\n Only baccarat."
                      },
                      "playerMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "Player maximum bet limit.\n Only baccarat."
                      },
                      "bankerMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "Banker minimum bet limit.\n Only baccarat."
                      },
                      "bankerMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "Banker maximum bet limit.\n Only baccarat."
                      },
                      "tieMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "Tie minimum bet limit.\n Only baccarat,dragon-tiger."
                      },
                      "tieMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "Tie maximum bet limit.\n Only baccarat,dragon-tiger."
                      },
                      "playerPairMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "PlayerPair minimum bet limit.\n Only baccarat."
                      },
                      "playerPairMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "PlayerPair maximum bet limit.\n Only baccarat."
                      },
                      "bankerPairMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "BankerPair minimum bet limit.\n Only baccarat."
                      },
                      "bankerPairMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "BankerPair maximum bet limit.\n Only baccarat."
                      },
                      "bankerDragonBonusMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "BankerDragonBonus minimum bet limit.\n Only baccarat."
                      },
                      "bankerDragonBonusMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "BankerDragonBonus maximum bet limit.\n Only baccarat."
                      },
                      "playerDragonBonusMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "PlayerDragonBonus minimum bet limit.\n Only baccarat."
                      },
                      "playerDragonBonusMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "Player maximum bet limit.\n Only baccarat."
                      },
                      "bigMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "Big minimum bet limit.\n Only baccarat,sic-bo,roulette."
                      },
                      "bigMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "Big maximum bet limit.\n Only baccarat,sic-bo,roulette."
                      },
                      "smallMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "Small minimum bet limit.\n Only baccarat,sic-bo,roulette."
                      },
                      "smallMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "Small maximum bet limit.\n Only baccarat,sic-bo,roulette."
                      },
                      "bankerOddMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "BankerOdd minimum bet limit.\n Only baccarat."
                      },
                      "bankerOddMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "BankerOdd maximum bet limit.\n Only baccarat."
                      },
                      "bankerEvenMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "BankerEven minimum bet limit.\n Only baccarat."
                      },
                      "bankerEvenMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "BankerEven maximum bet limit.\n Only baccarat."
                      },
                      "playerOddMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "PlayerOdd minimum bet limit.\n Only baccarat."
                      },
                      "playerOddMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "PlayerOdd maximum bet limit.\n Only baccarat."
                      },
                      "playerEvenMin": {
                        "type": "number",
                        "format": "double",
                        "example": 10.0,
                        "description": "PlayerEven minimum bet limit.\n Only baccarat."
                      },
                      "playerEvenMax": {
                        "type": "number",
                        "format": "double",
                        "example": 1000.0,
                        "description": "PlayerEven maximum bet limit.\n Only baccarat."
                      },
                      "dragonMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Dragon minimum bet limit.\n Only dragon-tiger."
                      },
                      "dragonMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Dragon maximum bet limit.\n Only dragon-tiger."
                      },
                      "tigerMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Tiger minimum bet limit.\n Only dragon-tiger."
                      },
                      "tigerMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Tiger maximum bet limit.\n Only dragon-tiger."
                      },
                      "dragonOddMin": {
                        "type": "number",
                        "format": "double",
                        "description": "DragonOdd minimum bet limit.\n Only dragon-tiger."
                      },
                      "dragonOddMax": {
                        "type": "number",
                        "format": "double",
                        "description": "DragonOdd maximum bet limit.\n Only dragon-tiger."
                      },
                      "dragonEvenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "DragonEven minimum bet limit.\n Only dragon-tiger."
                      },
                      "dragonEvenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "DragonEven maximum bet limit.\n Only dragon-tiger."
                      },
                      "tigerOddMin": {
                        "type": "number",
                        "format": "double",
                        "description": "TigerOdd minimum bet limit.\n Only dragon-tiger."
                      },
                      "tigerOddMax": {
                        "type": "number",
                        "format": "double",
                        "description": "TigerOdd maximum bet limit.\n Only dragon-tiger."
                      },
                      "tigerEvenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "TigerEven minimum bet limit.\n Only dragon-tiger."
                      },
                      "tigerEvenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "TigerEven maximum bet limit.\n Only dragon-tiger."
                      },
                      "dragonBlackMin": {
                        "type": "number",
                        "format": "double",
                        "description": "DragonBlack minimum bet limit.\n Only dragon-tiger."
                      },
                      "dragonBlackMax": {
                        "type": "number",
                        "format": "double",
                        "description": "DragonBlack maximum bet limit.\n Only dragon-tiger."
                      },
                      "dragonRedMin": {
                        "type": "number",
                        "format": "double",
                        "description": "DragonRed minimum bet limit.\n Only dragon-tiger."
                      },
                      "dragonRedMax": {
                        "type": "number",
                        "format": "double",
                        "description": "DragonRed maximum bet limit.\n Only dragon-tiger."
                      },
                      "tigerBlackMin": {
                        "type": "number",
                        "format": "double",
                        "description": "TigerBlack minimum bet limit.\n Only dragon-tiger."
                      },
                      "tigerBlackMax": {
                        "type": "number",
                        "format": "double",
                        "description": "TigerBlack maximum bet limit.\n Only dragon-tiger."
                      },
                      "tigerRedMin": {
                        "type": "number",
                        "format": "double",
                        "description": "TigerRed minimum bet limit.\n Only dragon-tiger."
                      },
                      "tigerRedMax": {
                        "type": "number",
                        "format": "double",
                        "description": "TigerRed maximum bet limit.\n Only dragon-tiger."
                      },
                      "oddMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Odd minimum bet limit.\n Only sic-bo,roulette,fortune-wheel."
                      },
                      "oddMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Odd maximum bet limit.\n Only sic-bo,roulette,fortune-wheel."
                      },
                      "evenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Even minimum bet limit.\n Only sic-bo,roulette,fortune-wheel."
                      },
                      "evenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Even maximum bet limit.\n Only sic-bo,roulette,fortune-wheel."
                      },
                      "pairMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Pair minimum bet limit.\n Only sic-bo."
                      },
                      "pairMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Pair maximum bet limit.\n Only sic-bo."
                      },
                      "tripMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Trip minimum bet limit.\n Only sic-bo."
                      },
                      "tripMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Trip maximum bet limit.\n Only sic-bo."
                      },
                      "allTripMin": {
                        "type": "number",
                        "format": "double",
                        "description": "AllTrip minimum bet limit.\n Only sic-bo."
                      },
                      "allTripMax": {
                        "type": "number",
                        "format": "double",
                        "description": "AllTrip maximum bet limit.\n Only sic-bo."
                      },
                      "fourMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Four minimum bet limit.\n Only sic-bo."
                      },
                      "fourMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Four maximum bet limit.\n Only sic-bo."
                      },
                      "fiveMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Five minimum bet limit.\n Only sic-bo."
                      },
                      "fiveMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Five maximum bet limit.\n Only sic-bo."
                      },
                      "sixMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Six minimum bet limit.\n Only sic-bo."
                      },
                      "sixMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Six maximum bet limit.\n Only sic-bo."
                      },
                      "sevenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Seven minimum bet limit.\n Only sic-bo."
                      },
                      "sevenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Seven maximum bet limit.\n Only sic-bo."
                      },
                      "eightMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Eight minimum bet limit.\n Only sic-bo."
                      },
                      "eightMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Eight maximum bet limit.\n Only sic-bo."
                      },
                      "nineMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Nine minimum bet limit.\n Only sic-bo."
                      },
                      "nineMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Nine maximum bet limit.\n Only sic-bo."
                      },
                      "tenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Ten minimum bet limit.\n Only sic-bo."
                      },
                      "tenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Ten maximum bet limit.\n Only sic-bo."
                      },
                      "elevenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Eleven minimum bet limit.\n Only sic-bo."
                      },
                      "elevenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Eleven maximum bet limit.\n Only sic-bo."
                      },
                      "twelveMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Twelve minimum bet limit.\n Only sic-bo."
                      },
                      "twelveMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Twelve maximum bet limit.\n Only sic-bo."
                      },
                      "thirteenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Thirteen minimum bet limit.\n Only sic-bo."
                      },
                      "thirteenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Thirteen maximum bet limit.\n Only sic-bo."
                      },
                      "fourteenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Fourteen minimum bet limit.\n Only sic-bo."
                      },
                      "fourteenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Fourteen maximum bet limit.\n Only sic-bo."
                      },
                      "fifteenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Fifteen minimum bet limit.\n Only sic-bo."
                      },
                      "fifteenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Fifteen maximum bet limit.\n Only sic-bo."
                      },
                      "sixteenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Sixteen minimum bet limit.\n Only sic-bo."
                      },
                      "sixteenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Sixteen maximum bet limit.\n Only sic-bo."
                      },
                      "seventeenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Seventeen minimum bet limit.\n Only sic-bo."
                      },
                      "seventeenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Seventeen maximum bet limit.\n Only sic-bo."
                      },
                      "singleDiceMin": {
                        "type": "number",
                        "format": "double",
                        "description": "SingleDice minimum bet limit.\n Only sic-bo."
                      },
                      "singleDiceMax": {
                        "type": "number",
                        "format": "double",
                        "description": "SingleDice maximum bet limit.\n Only sic-bo."
                      },
                      "combinationMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Combination minimum bet limit.\n Only sic-bo."
                      },
                      "combinationMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Combination maximum bet limit.\n Only sic-bo."
                      },
                      "moreLeftMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Two same number minimum bet limit.\n Only sic-bo."
                      },
                      "moreLeftMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Two same number maximum bet limit.\n Only sic-bo."
                      },
                      "moreRightMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Three different number minimum bet limit.\n Only sic-bo."
                      },
                      "moreRightMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Three different number maximum bet limit.\n Only sic-bo."
                      },
                      "redMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Red minimum bet limit.\n Only roulette."
                      },
                      "redMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Red maximum bet limit.\n Only roulette."
                      },
                      "blackMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Black minimum bet limit.\n Only roulette."
                      },
                      "blackMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Black maximum bet limit.\n Only roulette."
                      },
                      "dozenMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Dozen minimum bet limit.\n Only roulette."
                      },
                      "dozenMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Dozen maximum bet limit.\n Only roulette."
                      },
                      "columnMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Column minimum bet limit.\n Only roulette."
                      },
                      "columnMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Column maximum bet limit.\n Only roulette."
                      },
                      "lineMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Line minimum bet limit.\n Only roulette."
                      },
                      "lineMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Line maximum bet limit.\n Only roulette."
                      },
                      "basketMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Basket minimum bet limit.\n Only roulette."
                      },
                      "basketMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Basket maximum bet limit.\n Only roulette."
                      },
                      "connerMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Conner minimum bet limit.\n Only roulette."
                      },
                      "connerMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Conner maximum bet limit.\n Only roulette."
                      },
                      "trioMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Trio minimum bet limit.\n Only roulette."
                      },
                      "trioMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Trio maximum bet limit.\n Only roulette."
                      },
                      "streetMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Street minimum bet limit.\n Only roulette."
                      },
                      "streetMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Street maximum bet limit.\n Only roulette."
                      },
                      "splitMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Split minimum bet limit.\n Only roulette."
                      },
                      "splitMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Split maximum bet limit.\n Only roulette."
                      },
                      "straightMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Straight minimum bet limit.\n Only roulette."
                      },
                      "straightMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Straight maximum bet limit.\n Only roulette."
                      },
                      "betPlayer1Min": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer1 minimum bet limit.\n Only niuniu."
                      },
                      "betPlayer1Max": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer1 maximum bet limit.\n Only niuniu."
                      },
                      "betPlayer1DoubleMin": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer1Double minimum bet limit.\n Only niuniu."
                      },
                      "betPlayer1DoubleMax": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer1Double maximum bet limit.\n Only niuniu."
                      },
                      "betPlayer2Min": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer2 minimum bet limit.\n Only niuniu."
                      },
                      "betPlayer2Max": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer2 maximum bet limit.\n Only niuniu."
                      },
                      "betPlayer2DoubleMin": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer2Double minimum bet limit.\n Only niuniu."
                      },
                      "betPlayer2DoubleMax": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer2Double maximum bet limit.\n Only niuniu."
                      },
                      "betPlayer3Min": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer3 minimum bet limit.\n Only niuniu."
                      },
                      "betPlayer3Max": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer3 maximum bet limit.\n Only niuniu."
                      },
                      "betPlayer3DoubleMin": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer3Double minimum bet limit.\n Only niuniu."
                      },
                      "betPlayer3DoubleMax": {
                        "type": "number",
                        "format": "double",
                        "description": "BetPlayer3Double maximum bet limit.\n Only niuniu."
                      },
                      "number_1Min": {
                        "type": "number",
                        "format": "double",
                        "description": "Number1 minimum bet limit.\n Only fortune-wheel."
                      },
                      "number_1Max": {
                        "type": "number",
                        "format": "double",
                        "description": "Number1 maximum bet limit.\n Only fortune-wheel."
                      },
                      "number_2Min": {
                        "type": "number",
                        "format": "double",
                        "description": "Number2 minimum bet limit.\n Only fortune-wheel."
                      },
                      "number_2Max": {
                        "type": "number",
                        "format": "double",
                        "description": "Number2 maximum bet limit.\n Only fortune-wheel."
                      },
                      "number_5Min": {
                        "type": "number",
                        "format": "double",
                        "description": "Number5 minimum bet limit.\n Only fortune-wheel."
                      },
                      "number_5Max": {
                        "type": "number",
                        "format": "double",
                        "description": "Number5 maximum bet limit.\n Only fortune-wheel."
                      },
                      "number_10Min": {
                        "type": "number",
                        "format": "double",
                        "description": "Number10 minimum bet limit.\n Only fortune-wheel."
                      },
                      "number_10Max": {
                        "type": "number",
                        "format": "double",
                        "description": "Number10 maximum bet limit.\n Only fortune-wheel."
                      },
                      "number_20Min": {
                        "type": "number",
                        "format": "double",
                        "description": "Number20 minimum bet limit.\n Only fortune-wheel."
                      },
                      "number_20Max": {
                        "type": "number",
                        "format": "double",
                        "description": "Number20 maximum bet limit.\n Only fortune-wheel."
                      },
                      "number_40Min": {
                        "type": "number",
                        "format": "double",
                        "description": "Number40 minimum bet limit.\n Only fortune-wheel."
                      },
                      "number_40Max": {
                        "type": "number",
                        "format": "double",
                        "description": "Number40 maximum bet limit.\n Only fortune-wheel."
                      },
                      "multipleMin": {
                        "type": "number",
                        "format": "double",
                        "description": "Multiple minimum bet limit.\n Only fortune-wheel."
                      },
                      "multipleMax": {
                        "type": "number",
                        "format": "double",
                        "description": "Multiple maximum bet limit.\n Only fortune-wheel."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/updatebetlimit": {
      "post": {
        "tags": ["Common API"],
        "summary": "updatebetlimit",
        "description": "Update user bet limit in each game",
        "operationId": "updatebetlimit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_9"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "channelId", "status", "updateGameList", "username"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "channelId": {
                  "$ref": "#/definitions/channelId"
                },
                "username": {
                  "$ref": "#/definitions/username"
                },
                "updateGameList": {
                  "type": "array",
                  "example": [1],
                  "description": "Game code to update betting limit:\n 1:Baccarat - VIP table\n 2:Baccarat - Normal table\n 3:Dragon Tiger\n 4:Sic Bo\n 5:Roulette\n 6:Bull Bull (niuniu)\n 7:Fortune Wheel",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userBetTracer": {
      "post": {
        "tags": ["Common API"],
        "summary": "userBetTracer",
        "description": "Provides the URL of the user's betting history.\n The link screen displays the game name, bet date, bet amount, payout amount, round number, member bet type (text + icon), and the result card type (text + icon). As with eBET background betting details.\n\n URL path rules:\n 1.Page link\n 2.username\n 3.channelId\n 4.roundCode\n 5.lang\n 6.Add display = 1 to turn off the valid betting field\n 7.signature (need to be added by the channel using the GET method)\n The resulting rule is RSA (channelId+username+roundCode+lang)",
        "operationId": "userBetTracer",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_10"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "path", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "path": {
                  "type": "string",
                  "example": "http://192.168.0.239:50009/userBetTracer.html?userName=apitest01&channelId=1&roundCode=B1-200101000000&lang=en_us",
                  "description": "link. Added username, channelId, roundCode and lang."
                }
              }
            }
          }
        }
      }
    },
    "/api/usertransaction": {
      "post": {
        "tags": ["Common API"],
        "summary": "usertransaction",
        "description": "This api is to query the current amount of money for users who have logged in within a period of time.\n Note: Because the amount of data may be too large, it is recommended to bring the following parameters when requesting to reduce the query time.\n (startTimeStr, endTimeStr, pageNum, pageSize)",
        "operationId": "usertransaction",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_11"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "count", "remainingVisits", "status", "transactions"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "count": {
                  "$ref": "#/definitions/count"
                },
                "remainingVisits": {
                  "$ref": "#/definitions/remainingVisit"
                },
                "transactions": {
                  "type": "array",
                  "description": "Transaction record",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "format": "int64",
                        "example": 19191919,
                        "description": "User ID"
                      },
                      "username": {
                        "$ref": "#/definitions/username"
                      },
                      "roundNo": {
                        "$ref": "#/definitions/roundCode"
                      },
                      "transBeforeBalance": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount before change."
                      },
                      "transBalance": {
                        "type": "number",
                        "format": "double",
                        "description": "Change amount."
                      },
                      "transAfterBalance": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount after change."
                      },
                      "transactionId": {
                        "type": "string",
                        "description": "Transaction ID"
                      },
                      "time": {
                        "type": "string",
                        "description": "Transaction time"
                      },
                      "subChannelId": {
                        "$ref": "#/definitions/subChannelId"
                      },
                      "bonusId": {
                        "type": "integer",
                        "description": "Event ID. Appears only when tradeType = 23,24"
                      },
                      "bonusName": {
                        "type": "string",
                        "description": "Event name. Appears only when tradeType = 23,24"
                      },
                      "tradeType": {
                        "type": "integer",
                        "description": "Transaction Type"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userbetsummary": {
      "post": {
        "tags": ["Common API"],
        "summary": "userbetsummary",
        "description": "This api is the total report in the query time period.\n Note: Only the records of successful bets and successful payouts are counted.\n The preset time period is the current day.",
        "operationId": "userbetsummary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_12"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "count", "endTime", "remainingVisits", "startTime", "status", "totalBet", "totalPayout", "totalWithholding"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "count": {
                  "$ref": "#/definitions/count"
                },
                "remainingVisits": {
                  "$ref": "#/definitions/remainingVisit"
                },
                "totalBet": {
                  "type": "number",
                  "format": "double",
                  "example": 123456.78,
                  "description": "Total amount of successful bets"
                },
                "totalPayout": {
                  "type": "number",
                  "format": "double",
                  "example": 123456.78,
                  "description": "Total amount of successful payouts"
                },
                "totalWithholding": {
                  "type": "number",
                  "format": "double",
                  "example": 123456.78,
                  "description": "Total amount of successful withholdings"
                },
                "startTime": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1577808000000,
                  "description": "The beginning of the search period. Uses milliseconds. The format is Unix Time"
                },
                "endTime": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1577894400000,
                  "description": "The end of the search period. Used in milliseconds. The format is Unix Time"
                }
              }
            }
          }
        }
      }
    },
    "/api/totaluserbetsummary": {
      "post": {
        "tags": ["Common API"],
        "summary": "totaluserbetsummary",
        "description": "Query user betting history",
        "operationId": "totaluserbetsummary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "This API is to query the number of bets, the amount of bets, the effective bets and the surplus of each player in each game.\n The search period cannot exceed seven days.",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_13"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "remainingVisit": {
                  "$ref": "#/definitions/remainingVisit"
                },
                "results": {
                  "type": "array",
                  "description": "record",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userName": {
                        "$ref": "#/definitions/username"
                      },
                      "games": {
                        "type": "array",
                        "description": "record",
                        "items": {
                          "type": "object",
                          "properties": {
                            "gameType": {
                              "type": "integer",
                              "example": 1,
                              "description": "Game type"
                            },
                            "gameName": {
                              "type": "string",
                              "example": "baccarat",
                              "description": "Game name"
                            },
                            "totalBet": {
                              "type": "number",
                              "format": "double",
                              "example": 100.0,
                              "description": "Total bet"
                            },
                            "totalEffectiveBet": {
                              "type": "number",
                              "format": "double",
                              "example": 100.0,
                              "description": "Total valid bets"
                            },
                            "totalBalance": {
                              "type": "number",
                              "format": "double",
                              "example": 100.0,
                              "description": "Total surplus, calculation formula (bet-payout)"
                            },
                            "count": {
                              "type": "integer",
                              "example": 1,
                              "description": "Total number of bets"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": ["Common API"],
        "summary": "logout",
        "description": "Take the player away from the eBET game.\n Note: The related functions must be enabled in the eBET background to use.",
        "operationId": "logout",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_14"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                }
              }
            }
          }
        }
      }
    },
    "/api/loginslot": {
      "post": {
        "tags": ["Common API"],
        "summary": "loginslot",
        "description": "Get a link to log in to the slot game directly.\n Note: using this method will still send a verification login request. A login link will only be provided after successful verification.",
        "operationId": "loginslot",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_15"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "slotURL", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "slotURL": {
                  "type": "string",
                  "example": "https://m.pg-demo.com/dragon-tiger-luck/index.html?bet_type=1&language=zh_cn&operator_player_session=47f3252d4bed570db97334a1378a6276-6815&operator_token=3f88464afacfa9cc07be0d181a5e631",
                  "description": "Link to slot games."
                }
              }
            }
          }
        }
      }
    },
    "/api/slotgamelist": {
      "post": {
        "tags": ["Common API"],
        "summary": "slotgamelist",
        "description": "Get a list of slot games.",
        "operationId": "slotgamelist",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_16"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "slotGames", "status"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "slotGames": {
                  "type": "array",
                  "description": "record",
                  "items": {
                    "type": "object",
                    "properties": {
                      "gameID": {
                        "type": "string",
                        "example": "win-win-won",
                        "description": "slot game id"
                      },
                      "english": {
                        "type": "string",
                        "example": "WIN WIN WON",
                        "description": "English name of slot game"
                      },
                      "chinese": {
                        "type": "string",
                        "example": "旺旺旺",
                        "description": "Chinese name of slot game"
                      },
                      "providerId": {
                        "type": "string",
                        "example": "pgsoft",
                        "description": "slot game vendor id"
                      },
                      "releaseDate": {
                        "type": "string",
                        "example": "2018-08-14",
                        "description": "Release date"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/callback": {
      "post": {
        "tags": ["Common API"],
        "summary": "callback",
        "description": "Channels can use their own login portal if the channel does not want to go through eBET's login portal.\n The channel must request this API to notify eBET to let the player log in to the game after verifying the player.\n Note: Need to provide link and eBET should be set to open on the backend.",
        "operationId": "callback",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Request",
          "required": false,
          "schema": {
            "$ref": "#/definitions/body_17"
          }
        }],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "required": ["apiVersion", "channelId", "money", "status", "subChannelId", "timestamp", "userId", "username", "wallet"],
              "properties": {
                "status": {
                  "$ref": "#/definitions/status"
                },
                "apiVersion": {
                  "$ref": "#/definitions/apiVersion"
                },
                "channelId": {
                  "$ref": "#/definitions/channelId"
                },
                "subChannelId": {
                  "$ref": "#/definitions/subChannelId"
                },
                "username": {
                  "$ref": "#/definitions/username"
                },
                "userId": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1919191919,
                  "description": "User ID"
                },
                "money": {
                  "type": "number",
                  "format": "double",
                  "example": 100000.01,
                  "description": "User's money"
                },
                "timestamp": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1577808000,
                  "description": "Current time. In seconds. Format is Unix Time."
                },
                "wallet": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/wallet"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "username": {
      "type": "string",
      "description": "Username.",
      "example": "apitest01"
    },
    "channelId": {
      "type": "integer",
      "description": "Channel ID.",
      "example": 1
    },
    "subChannelId": {
      "type": "integer",
      "description": "Sub-channel ID.",
      "example": 0
    },
    "pageNum": {
      "type": "integer",
      "description": "Page number. Default is 1.",
      "example": 1
    },
    "pageSize": {
      "type": "integer",
      "description": "The number of records displayed on each page. Default is 10. The maximum is 5000.",
      "example": 10
    },
    "startTimeStr": {
      "type": "string",
      "description": "Start of query time range.",
      "example": "2020-01-01 00:00:00"
    },
    "endTimeStr": {
      "type": "string",
      "description": "End of query time range.",
      "example": "2020-01-02 00:00:00"
    },
    "timestamp": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp. In milliseconds.",
      "example": 1577808000000
    },
    "signature": {
      "type": "string",
      "description": "Signature. String splicing :username+timestamp\n Note: timestamp can be used alone if no username",
      "example": "bCP+wYe8TxN3UIHeNPxEv7czYkXueoe1pKSB6IaUDfoR4mtFYcJl3rNFk8Uz84XAHfeD3mNE+p4gECOVw2JxxQ=="
    },
    "signature2": {
      "type": "string",
      "description": "Signature. String splicing :username+channelId+timestamp",
      "example": "dry4mQ5qb7hyAeDDi1Ia+m5fsouP+qf2xfcpb+nP+La5yEMbYuHRz7Fge2OTgVi7DttC8p+Aiedfnnu42ii2lQ=="
    },
    "currency": {
      "type": "string",
      "description": "Currency.",
      "example": "USD"
    },
    "status": {
      "type": "integer",
      "description": "Response status.",
      "example": 200
    },
    "apiVersion": {
      "type": "string",
      "description": "API version number.",
      "example": "1.3.55"
    },
    "remainingVisit": {
      "type": "integer",
      "description": "Number of remaining requests, 500 times per minute.",
      "example": 200
    },
    "rechargeReqId": {
      "type": "string",
      "description": "Recharge Request ID.",
      "example": "rechargeReqId123456"
    },
    "tableType": {
      "type": "integer",
      "description": "Game type.",
      "example": 1
    },
    "tableSubType": {
      "type": "integer",
      "description": "Game table type.",
      "example": 0
    },
    "roundCode": {
      "type": "string",
      "description": "Round number.",
      "example": "B1-200101000000"
    },
    "count": {
      "type": "integer",
      "description": "Total count.",
      "example": 1
    },
    "wallet": {
      "type": "object",
      "properties": {
        "typeId": {
          "type": "integer",
          "example": 0
        },
        "money": {
          "type": "number",
          "format": "double",
          "example": 200.0
        }
      },
      "description": "Balance of each wallet."
    },
    "betHistories": {
      "type": "object",
      "properties": {
        "gameType": {
          "type": "integer",
          "example":1,
          "description": "Game type.\n 1: Baccarat\n 2: Dragon Tiger\n 3: Sic Bo\n 4: Roulette\n 5: Slot\n 7: Blockchain Baccarat\n 8: BullBull\n 23:  FortuneWheel"
        },
        "gameName": {
          "type": "string",
          "description": "Game name.\n 1: Baccarat\n 2: Dragon Tiger\n 3: Sic Bo\n 4: Roulette\n 5: Slot\n 7: Blockchain Baccarat",
          "enum": ["baccarat", "dragon-tiger", "sic-bo", "roulette", "slot", "blockchain-baccarat"]
        },
        "betMap": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/betMap"
          }
        },
        "bet": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Total bet amount."
        },
        "roundNo": {
          "$ref": "#/definitions/roundCode"
        },
        "payout": {
          "type": "number",
          "format": "double",
          "example": 20.0,
          "description": "Total payout amount."
        },
        "payoutDetail": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/betHistories_payoutDetail"
          }
        },
        "judgeResult": {
          "type": "array",
          "example": [60, 70, 82, 63],
          "description": "Winning awards.\n niuniu: The result of the flop.",
          "items": {
            "type": "integer"
          }
        },
        "surrender": {
          "type": "integer",
          "description": "Surrender payout(Only Black Jack payout has this parameter.)"
        },
        "playerCards": {
          "type": "array",
          "example": [1, 6, 29],
          "description": "Only baccarat. Player's flop results.",
          "items": {
            "type": "integer"
          }
        },
        "playerResult": {
          "type": "integer",
          "example": 6,
          "description": "Only baccarat. Player points"
        },
        "bankerCard": {
          "type": "array",
          "example": [14, 38, 7],
          "description": "Only baccarat. Banker's flop results.",
          "items": {
            "type": "integer"
          }
        },
        "bankerResult": {
          "type": "integer",
          "example": 3,
          "description": "Only baccarat. Banker points"
        },
        "dragonCard": {
          "type": "integer",
          "description": "Only dragon-tiger. Dragon's flop results."
        },
        "tigerCard": {
          "type": "integer",
          "description": "Only dragon-tiger. Tiger's flop results."
        },
        "number": {
          "type": "integer",
          "description": "Only roulette. Number for the result."
        },
        "allDices": {
          "type": "array",
          "description": "Only sic-bo. Points for the result.",
          "items": {
            "type": "integer"
          }
        },
        "niuniuResult": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/betHistories_niuniuResult"
          }
        },
        "niuniuWithHoldingTotal": {
          "type": "number",
          "format": "double",
          "description": "Only niuniu. Niuniu's total withholding amount."
        },
        "niuniuWithHoldingDetail": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/betHistories_niuniuWithHoldingDetail"
          }
        },
        "maxPayout": {
          "type": "number",
          "format": "double",
          "description": "Only Fortune Roulette. Maximum payout."
        },
        "payoutWithoutholding": {
          "type": "number",
          "format": "double",
          "description": "Exclude withholding total payout amount.\n If there is no withholding amount, the parameter value will be the same as payout.\n If there is a withholding amount, the calculation formula is payout-niuniuWithholdingtotal. If the parameter value is greater than 0, the player wins, and if it is 0, the player loses money."
        },
        "createTime": {
          "type": "integer",
          "format": "int64",
          "example": 1577808000,
          "description": "Bet time. In seconds. Format is Unix Time."
        },
        "payoutTime": {
          "type": "integer",
          "format": "int64",
          "example": 1577808030,
          "description": "Payout time. In seconds. Format is Unix Time."
        },
        "betHistoryId": {
          "type": "string",
          "example": "5e0d696b2fdda1335fa68243",
          "description": "Bet Record ID."
        },
        "validBet": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Valid bet."
        },
        "balance": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Surplus."
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "example": 19191919,
          "description": "User ID"
        },
        "platform": {
          "type": "integer",
          "example": 1,
          "description": "Game platform"
        }
      }
    },
    "betMap": {
      "type": "object",
      "properties": {
        "betType": {
          "type": "integer",
          "format": "int64",
          "example": 60,
          "description": "Bet type"
        },
        "betMoney": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Bet money"
        },
        "betTypeInterval": {
          "type": "string",
          "description": "Only roulette. Combined code."
        },
        "betNumber": {
          "type": "array",
          "description": "Only roulette. Bet combination.",
          "items": {
            "type": "integer"
          }
        },
        "betDice": {
          "type": "array",
          "description": "Only sic-bo. Bet combination.",
          "items": {
            "type": "integer"
          }
        }
      },
      "description": "Bet details."
    },
    "body": {
      "required": ["channelId", "money", "rechargeReqId", "signature", "timestamp", "username"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        },
        "money": {
          "type": "number",
          "format": "double",
          "example": 100.0,
          "description": "To change the amount.\n Positive numbers represent transfer in. \n Negative numbers represent transfer out."
        },
        "rechargeReqId": {
          "$ref": "#/definitions/rechargeReqId"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "typeId": {
          "type": "integer",
          "example": 0,
          "description": "Wallet type. Default is 0."
        }
      }
    },
    "body_1": {
      "required": ["channelId", "rechargeReqId", "signature"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "signature": {
          "type": "string",
          "example": "PooUUWwXW5lDNzAgk9f6CFEhTbKq/J3b5UScNMl3SnBzCLxLDXZ/s2y8nF8UufSXgrHyS3DfJ6CJxAqjKRg53A==",
          "description": "Signature. String splicing :rechargeReqId"
        },
        "rechargeReqId": {
          "$ref": "#/definitions/rechargeReqId"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      }
    },
    "body_2": {
      "required": ["channelId", "signature", "username"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "signature": {
          "type": "string",
          "example": "ZwV0Upcy93v3S/ChPh/K4FtbQ3VfA9bVomRZxBhp7I/nh2P0+qwl+dfax4QZrLwT3TuFIJGv1+nWBb+oTN5bdg==",
          "description": "Signature. String splicing :username"
        },
        "subChannelId": {
          "$ref": "#/definitions/subChannelId"
        },
        "startTimeStr": {
          "$ref": "#/definitions/startTimeStr"
        },
        "endTimeStr": {
          "$ref": "#/definitions/endTimeStr"
        },
        "pageNum": {
          "$ref": "#/definitions/pageNum"
        },
        "pageSize": {
          "$ref": "#/definitions/pageSize"
        },
        "minMoney": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Minimum amount of money. Below this amount will not be displayed."
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "walletType": {
          "type": "integer",
          "example": 0,
          "description": "Query Wallet Type"
        }
      }
    },
    "body_3": {
      "required": ["channelId", "signature", "timestamp"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature2"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "subChannelId": {
          "$ref": "#/definitions/subChannelId"
        },
        "startTimeStr": {
          "$ref": "#/definitions/startTimeStr"
        },
        "endTimeStr": {
          "$ref": "#/definitions/endTimeStr"
        },
        "pageNum": {
          "$ref": "#/definitions/pageNum"
        },
        "pageSize": {
          "$ref": "#/definitions/pageSize"
        },
        "withNo200": {
          "type": "boolean",
          "example": false,
          "description": "Get success record. Default is false."
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      }
    },
    "body_4": {
      "required": ["channelId", "signature", "username"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "signature": {
          "type": "string",
          "example": "ZwV0Upcy93v3S/ChPh/K4FtbQ3VfA9bVomRZxBhp7I/nh2P0+qwl+dfax4QZrLwT3TuFIJGv1+nWBb+oTN5bdg==",
          "description": "Signature. String splicing :username"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "subChannelId": {
          "$ref": "#/definitions/subChannelId"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      }
    },
    "body_5": {
      "required": ["channelId", "signature", "timestamp", "username"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      }
    },
    "body_6": {
      "required": ["channelId", "signature", "timestamp"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "subChannelId": {
          "$ref": "#/definitions/subChannelId"
        },
        "startTimeStr": {
          "$ref": "#/definitions/startTimeStr"
        },
        "endTimeStr": {
          "$ref": "#/definitions/endTimeStr"
        },
        "pageNum": {
          "$ref": "#/definitions/pageNum"
        },
        "pageSize": {
          "$ref": "#/definitions/pageSize"
        },
        "betStatus": {
          "type": "integer",
          "example": 1,
          "description": "Check the betting status. Default is all records\n 0: query only failed records\n 1: query only successful records"
        },
        "roundCode": {
          "$ref": "#/definitions/roundCode"
        },
        "gameType": {
          "type": "integer",
          "example": 1,
          "description": "Game type.\n 1: Baccarat\n 2: Dragon Tiger\n 3: Sic Bo\n 4: Roulette\n 5: Slot\n 7: Blockchain Baccarat\n 8: BullBull\n 23: FortuneWheel"
        },
        "judgeTime": {
          "type": "integer",
          "example": 0,
          "description": "Judgment query time. Default is 0\n 0: Payout time\n 1: Bet time"
        },
        "isSeparate": {
          "type": "boolean",
          "example": false,
          "description": "The way betHistories is displayed. Default is false.\n true: segment by the number of confirmed bets\n false: according to payout records do show\n Note: This parameter will not affect the calculation of other parameters. It will still be processed based on the number of payouts."
        }
      }
    },
    "body_7": {
      "required": ["channelId", "signature", "tableCode", "tableSubType", "tableType", "timestamp"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "type": "string",
          "example": "ZwV0Upcy93v3S/ChPh/K4FtbQ3VfA9bVomRZxBhp7I/nh2P0+qwl+dfax4QZrLwT3TuFIJGv1+nWBb+oTN5bdg==",
          "description": "Signature. String splicing :timestamp"
        },
        "tableType": {
          "$ref": "#/definitions/tableType"
        },
        "tableSubType": {
          "$ref": "#/definitions/tableSubType"
        },
        "tableCode": {
          "type": "string",
          "example": "B1",
          "description": "Game table number"
        }
      }
    },
    "body_8": {
      "required": ["channelId", "signature", "timestamp", "username"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature2"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      }
    },
    "apiupdatebetlimit_limit": {
      "type": "object",
      "properties": {
        "gameType": {
          "type": "integer",
          "example":1,
          "description": "Game type.\n 1:Baccarat - VIP table\n 2:Baccarat - Normal table\n 3:Dragon Tiger\n 4:Sic Bo\n 5:Roulette\n 6:Bull Bull \n 7:Fortune Wheel"
        },
        "playerMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Player minimum bet limit.\n Only baccarat."
        },
        "playerMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "Player maximum bet limit.\n Only baccarat."
        },
        "bankerMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Banker minimum bet limit.\n Only baccarat."
        },
        "bankerMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "Banker maximum bet limit.\n Only baccarat."
        },
        "tieMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Tie minimum bet limit.\n Only baccarat,dragon-tiger."
        },
        "bankerLucky6Min": {
          "type": "number",
          "format": "double",
          "example": 1.0,
          "description": "Tie minimum bet limit.\n Only baccarat."
        },
        "bankerLucky6Max": {
          "type": "number",
          "format": "double",
          "example": 1.0,
          "description": "Tie maximum bet limit.\n Only baccarat."
        },
        "tieMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "Tie maximum bet limit.\n Only baccarat,dragon-tiger."
        },
        "playerPairMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "PlayerPair minimum bet limit.\n Only baccarat."
        },
        "playerPairMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "PlayerPair maximum bet limit.\n Only baccarat."
        },
        "bankerPairMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "BankerPair minimum bet limit.\n Only baccarat."
        },
        "bankerPairMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "BankerPair maximum bet limit.\n Only baccarat."
        },
        "bankerDragonBonusMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "BankerDragonBonus minimum bet limit.\n Only baccarat."
        },
        "bankerDragonBonusMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "BankerDragonBonus maximum bet limit.\n Only baccarat."
        },
        "playerDragonBonusMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "PlayerDragonBonus minimum bet limit.\n Only baccarat."
        },
        "playerDragonBonusMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "Player maximum bet limit.\n Only baccarat."
        },
        "bigMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Big minimum bet limit.\n Only baccarat,sic-bo,roulette."
        },
        "bigMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "Big maximum bet limit.\n Only baccarat,sic-bo,roulette."
        },
        "smallMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "Small minimum bet limit.\n Only baccarat,sic-bo,roulette."
        },
        "smallMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "Small maximum bet limit.\n Only baccarat,sic-bo,roulette."
        },
        "bankerOddMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "BankerOdd minimum bet limit.\n Only baccarat."
        },
        "bankerOddMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "BankerOdd maximum bet limit.\n Only baccarat."
        },
        "bankerEvenMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "BankerEven minimum bet limit.\n Only baccarat."
        },
        "bankerEvenMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "BankerEven maximum bet limit.\n Only baccarat."
        },
        "playerOddMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "PlayerOdd minimum bet limit.\n Only baccarat."
        },
        "playerOddMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "PlayerOdd maximum bet limit.\n Only baccarat."
        },
        "playerEvenMin": {
          "type": "number",
          "format": "double",
          "example": 10.0,
          "description": "PlayerEven minimum bet limit.\n Only baccarat."
        },
        "playerEvenMax": {
          "type": "number",
          "format": "double",
          "example": 1000.0,
          "description": "PlayerEven maximum bet limit.\n Only baccarat."
        },
        "dragonMin": {
          "type": "number",
          "format": "double",
          "description": "Dragon minimum bet limit.\n Only dragon-tiger."
        },
        "dragonMax": {
          "type": "number",
          "format": "double",
          "description": "Dragon maximum bet limit.\n Only dragon-tiger."
        },
        "tigerMin": {
          "type": "number",
          "format": "double",
          "description": "Tiger minimum bet limit.\n Only dragon-tiger."
        },
        "tigerMax": {
          "type": "number",
          "format": "double",
          "description": "Tiger maximum bet limit.\n Only dragon-tiger."
        },
        "dragonOddMin": {
          "type": "number",
          "format": "double",
          "description": "DragonOdd minimum bet limit.\n Only dragon-tiger."
        },
        "dragonOddMax": {
          "type": "number",
          "format": "double",
          "description": "DragonOdd maximum bet limit.\n Only dragon-tiger."
        },
        "dragonEvenMin": {
          "type": "number",
          "format": "double",
          "description": "DragonEven minimum bet limit.\n Only dragon-tiger."
        },
        "dragonEvenMax": {
          "type": "number",
          "format": "double",
          "description": "DragonEven maximum bet limit.\n Only dragon-tiger."
        },
        "tigerOddMin": {
          "type": "number",
          "format": "double",
          "description": "TigerOdd minimum bet limit.\n Only dragon-tiger."
        },
        "tigerOddMax": {
          "type": "number",
          "format": "double",
          "description": "TigerOdd maximum bet limit.\n Only dragon-tiger."
        },
        "tigerEvenMin": {
          "type": "number",
          "format": "double",
          "description": "TigerEven minimum bet limit.\n Only dragon-tiger."
        },
        "tigerEvenMax": {
          "type": "number",
          "format": "double",
          "description": "TigerEven maximum bet limit.\n Only dragon-tiger."
        },
        "dragonBlackMin": {
          "type": "number",
          "format": "double",
          "description": "DragonBlack minimum bet limit.\n Only dragon-tiger."
        },
        "dragonBlackMax": {
          "type": "number",
          "format": "double",
          "description": "DragonBlack maximum bet limit.\n Only dragon-tiger."
        },
        "dragonRedMin": {
          "type": "number",
          "format": "double",
          "description": "DragonRed minimum bet limit.\n Only dragon-tiger."
        },
        "dragonRedMax": {
          "type": "number",
          "format": "double",
          "description": "DragonRed maximum bet limit.\n Only dragon-tiger."
        },
        "tigerBlackMin": {
          "type": "number",
          "format": "double",
          "description": "TigerBlack minimum bet limit.\n Only dragon-tiger."
        },
        "tigerBlackMax": {
          "type": "number",
          "format": "double",
          "description": "TigerBlack maximum bet limit.\n Only dragon-tiger."
        },
        "tigerRedMin": {
          "type": "number",
          "format": "double",
          "description": "TigerRed minimum bet limit.\n Only dragon-tiger."
        },
        "tigerRedMax": {
          "type": "number",
          "format": "double",
          "description": "TigerRed maximum bet limit.\n Only dragon-tiger."
        },
        "oddMin": {
          "type": "number",
          "format": "double",
          "description": "Odd minimum bet limit.\n Only sic-bo,roulette,fortune-wheel."
        },
        "oddMax": {
          "type": "number",
          "format": "double",
          "description": "Odd maximum bet limit.\n Only sic-bo,roulette,fortune-wheel."
        },
        "evenMin": {
          "type": "number",
          "format": "double",
          "description": "Even minimum bet limit.\n Only sic-bo,roulette,fortune-wheel."
        },
        "evenMax": {
          "type": "number",
          "format": "double",
          "description": "Even maximum bet limit.\n Only sic-bo,roulette,fortune-wheel."
        },
        "pairMin": {
          "type": "number",
          "format": "double",
          "description": "Pair minimum bet limit.\n Only sic-bo."
        },
        "pairMax": {
          "type": "number",
          "format": "double",
          "description": "Pair maximum bet limit.\n Only sic-bo."
        },
        "tripleMin": {
          "type": "number",
          "format": "double",
          "description": "Trip minimum bet limit.\n Only sic-bo."
        },
        "tripleMax": {
          "type": "number",
          "format": "double",
          "description": "Trip maximum bet limit.\n Only sic-bo."
        },
        "allTripleMin": {
          "type": "number",
          "format": "double",
          "description": "AllTrip minimum bet limit.\n Only sic-bo."
        },
        "allTripleMax": {
          "type": "number",
          "format": "double",
          "description": "AllTrip maximum bet limit.\n Only sic-bo."
        },
        "fourMin": {
          "type": "number",
          "format": "double",
          "description": "Four minimum bet limit.\n Only sic-bo."
        },
        "fourMax": {
          "type": "number",
          "format": "double",
          "description": "Four maximum bet limit.\n Only sic-bo."
        },
        "fiveMin": {
          "type": "number",
          "format": "double",
          "description": "Five minimum bet limit.\n Only sic-bo."
        },
        "fiveMax": {
          "type": "number",
          "format": "double",
          "description": "Five maximum bet limit.\n Only sic-bo."
        },
        "sixMin": {
          "type": "number",
          "format": "double",
          "description": "Six minimum bet limit.\n Only sic-bo."
        },
        "sixMax": {
          "type": "number",
          "format": "double",
          "description": "Six maximum bet limit.\n Only sic-bo."
        },
        "sevenMin": {
          "type": "number",
          "format": "double",
          "description": "Seven minimum bet limit.\n Only sic-bo."
        },
        "sevenMax": {
          "type": "number",
          "format": "double",
          "description": "Seven maximum bet limit.\n Only sic-bo."
        },
        "eightMin": {
          "type": "number",
          "format": "double",
          "description": "Eight minimum bet limit.\n Only sic-bo."
        },
        "eightMax": {
          "type": "number",
          "format": "double",
          "description": "Eight maximum bet limit.\n Only sic-bo."
        },
        "nineMin": {
          "type": "number",
          "format": "double",
          "description": "Nine minimum bet limit.\n Only sic-bo."
        },
        "nineMax": {
          "type": "number",
          "format": "double",
          "description": "Nine maximum bet limit.\n Only sic-bo."
        },
        "tenMin": {
          "type": "number",
          "format": "double",
          "description": "Ten minimum bet limit.\n Only sic-bo."
        },
        "tenMax": {
          "type": "number",
          "format": "double",
          "description": "Ten maximum bet limit.\n Only sic-bo."
        },
        "elevenMin": {
          "type": "number",
          "format": "double",
          "description": "Eleven minimum bet limit.\n Only sic-bo."
        },
        "elevenMax": {
          "type": "number",
          "format": "double",
          "description": "Eleven maximum bet limit.\n Only sic-bo."
        },
        "twelveMin": {
          "type": "number",
          "format": "double",
          "description": "Twelve minimum bet limit.\n Only sic-bo."
        },
        "twelveMax": {
          "type": "number",
          "format": "double",
          "description": "Twelve maximum bet limit.\n Only sic-bo."
        },
        "thirteenMin": {
          "type": "number",
          "format": "double",
          "description": "Thirteen minimum bet limit.\n Only sic-bo."
        },
        "thirteenMax": {
          "type": "number",
          "format": "double",
          "description": "Thirteen maximum bet limit.\n Only sic-bo."
        },
        "fourteenMin": {
          "type": "number",
          "format": "double",
          "description": "Fourteen minimum bet limit.\n Only sic-bo."
        },
        "fourteenMax": {
          "type": "number",
          "format": "double",
          "description": "Fourteen maximum bet limit.\n Only sic-bo."
        },
        "fifteenMin": {
          "type": "number",
          "format": "double",
          "description": "Fifteen minimum bet limit.\n Only sic-bo."
        },
        "fifteenMax": {
          "type": "number",
          "format": "double",
          "description": "Fifteen maximum bet limit.\n Only sic-bo."
        },
        "sixteenMin": {
          "type": "number",
          "format": "double",
          "description": "Sixteen minimum bet limit.\n Only sic-bo."
        },
        "sixteenMax": {
          "type": "number",
          "format": "double",
          "description": "Sixteen maximum bet limit.\n Only sic-bo."
        },
        "seventeenMin": {
          "type": "number",
          "format": "double",
          "description": "Seventeen minimum bet limit.\n Only sic-bo."
        },
        "seventeenMax": {
          "type": "number",
          "format": "double",
          "description": "Seventeen maximum bet limit.\n Only sic-bo."
        },
        "singleDiceMin": {
          "type": "number",
          "format": "double",
          "description": "SingleDice minimum bet limit.\n Only sic-bo."
        },
        "singleDiceMax": {
          "type": "number",
          "format": "double",
          "description": "SingleDice maximum bet limit.\n Only sic-bo."
        },
        "combinationMin": {
          "type": "number",
          "format": "double",
          "description": "Combination minimum bet limit.\n Only sic-bo."
        },
        "combinationMax": {
          "type": "number",
          "format": "double",
          "description": "Combination maximum bet limit.\n Only sic-bo."
        },
        "moreLeftMin": {
          "type": "number",
          "format": "double",
          "description": "Two same number minimum bet limit.\n Only sic-bo."
        },
        "moreLeftMax": {
          "type": "number",
          "format": "double",
          "description": "Two same number maximum bet limit.\n Only sic-bo."
        },
        "moreRightMin": {
          "type": "number",
          "format": "double",
          "description": "Three different number minimum bet limit.\n Only sic-bo."
        },
        "moreRightMax": {
          "type": "number",
          "format": "double",
          "description": "Three different number maximum bet limit.\n Only sic-bo."
        },
        "redMin": {
          "type": "number",
          "format": "double",
          "description": "Red minimum bet limit.\n Only roulette."
        },
        "redMax": {
          "type": "number",
          "format": "double",
          "description": "Red maximum bet limit.\n Only roulette."
        },
        "blackMin": {
          "type": "number",
          "format": "double",
          "description": "Black minimum bet limit.\n Only roulette."
        },
        "blackMax": {
          "type": "number",
          "format": "double",
          "description": "Black maximum bet limit.\n Only roulette."
        },
        "dozenMin": {
          "type": "number",
          "format": "double",
          "description": "Dozen minimum bet limit.\n Only roulette."
        },
        "dozenMax": {
          "type": "number",
          "format": "double",
          "description": "Dozen maximum bet limit.\n Only roulette."
        },
        "columnMin": {
          "type": "number",
          "format": "double",
          "description": "Column minimum bet limit.\n Only roulette."
        },
        "columnMax": {
          "type": "number",
          "format": "double",
          "description": "Column maximum bet limit.\n Only roulette."
        },
        "lineMin": {
          "type": "number",
          "format": "double",
          "description": "Line minimum bet limit.\n Only roulette."
        },
        "lineMax": {
          "type": "number",
          "format": "double",
          "description": "Line maximum bet limit.\n Only roulette."
        },
        "basketMin": {
          "type": "number",
          "format": "double",
          "description": "Basket minimum bet limit.\n Only roulette."
        },
        "basketMax": {
          "type": "number",
          "format": "double",
          "description": "Basket maximum bet limit.\n Only roulette."
        },
        "cornerMin": {
          "type": "number",
          "format": "double",
          "description": "Conner minimum bet limit.\n Only roulette."
        },
        "cornerMax": {
          "type": "number",
          "format": "double",
          "description": "Conner maximum bet limit.\n Only roulette."
        },
        "trioMin": {
          "type": "number",
          "format": "double",
          "description": "Trio minimum bet limit.\n Only roulette."
        },
        "trioMax": {
          "type": "number",
          "format": "double",
          "description": "Trio maximum bet limit.\n Only roulette."
        },
        "streetMin": {
          "type": "number",
          "format": "double",
          "description": "Street minimum bet limit.\n Only roulette."
        },
        "streetMax": {
          "type": "number",
          "format": "double",
          "description": "Street maximum bet limit.\n Only roulette."
        },
        "splitMin": {
          "type": "number",
          "format": "double",
          "description": "Split minimum bet limit.\n Only roulette."
        },
        "splitMax": {
          "type": "number",
          "format": "double",
          "description": "Split maximum bet limit.\n Only roulette."
        },
        "straightMin": {
          "type": "number",
          "format": "double",
          "description": "Straight minimum bet limit.\n Only roulette."
        },
        "straightMax": {
          "type": "number",
          "format": "double",
          "description": "Straight maximum bet limit.\n Only roulette."
        },
        "betPlayer1Min": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer1 minimum bet limit.\n Only niuniu."
        },
        "betPlayer1Max": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer1 maximum bet limit.\n Only niuniu."
        },
        "betPlayer1DoubleMin": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer1Double minimum bet limit.\n Only niuniu."
        },
        "betPlayer1DoubleMax": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer1Double maximum bet limit.\n Only niuniu."
        },
        "betPlayer2Min": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer2 minimum bet limit.\n Only niuniu."
        },
        "betPlayer2Max": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer2 maximum bet limit.\n Only niuniu."
        },
        "betPlayer2DoubleMin": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer2Double minimum bet limit.\n Only niuniu."
        },
        "betPlayer2DoubleMax": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer2Double maximum bet limit.\n Only niuniu."
        },
        "betPlayer3Min": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer3 minimum bet limit.\n Only niuniu."
        },
        "betPlayer3Max": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer3 maximum bet limit.\n Only niuniu."
        },
        "betPlayer3DoubleMin": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer3Double minimum bet limit.\n Only niuniu."
        },
        "betPlayer3DoubleMax": {
          "type": "number",
          "format": "double",
          "description": "BetPlayer3Double maximum bet limit.\n Only niuniu."
        },
        "number_1Min": {
          "type": "number",
          "format": "double",
          "description": "Number1 minimum bet limit.\n Only fortune-wheel."
        },
        "number_1Max": {
          "type": "number",
          "format": "double",
          "description": "Number1 maximum bet limit.\n Only fortune-wheel."
        },
        "number_2Min": {
          "type": "number",
          "format": "double",
          "description": "Number2 minimum bet limit.\n Only fortune-wheel."
        },
        "number_2Max": {
          "type": "number",
          "format": "double",
          "description": "Number2 maximum bet limit.\n Only fortune-wheel."
        },
        "number_5Min": {
          "type": "number",
          "format": "double",
          "description": "Number5 minimum bet limit.\n Only fortune-wheel."
        },
        "number_5Max": {
          "type": "number",
          "format": "double",
          "description": "Number5 maximum bet limit.\n Only fortune-wheel."
        },
        "number_10Min": {
          "type": "number",
          "format": "double",
          "description": "Number10 minimum bet limit.\n Only fortune-wheel."
        },
        "number_10Max": {
          "type": "number",
          "format": "double",
          "description": "Number10 maximum bet limit.\n Only fortune-wheel."
        },
        "number_20Min": {
          "type": "number",
          "format": "double",
          "description": "Number20 minimum bet limit.\n Only fortune-wheel."
        },
        "number_20Max": {
          "type": "number",
          "format": "double",
          "description": "Number20 maximum bet limit.\n Only fortune-wheel."
        },
        "number_40Min": {
          "type": "number",
          "format": "double",
          "description": "Number40 minimum bet limit.\n Only fortune-wheel."
        },
        "number_40Max": {
          "type": "number",
          "format": "double",
          "description": "Number40 maximum bet limit.\n Only fortune-wheel."
        },
        "multipleMin": {
          "type": "number",
          "format": "double",
          "description": "Multiple minimum bet limit.\n Only fortune-wheel."
        },
        "multipleMax": {
          "type": "number",
          "format": "double",
          "description": "Multiple maximum bet limit.\n Only fortune-wheel."
        }
      }
    },
    "body_9": {
      "required": ["channelId", "limit", "signature", "timestamp", "username"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature2"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "limit": {
          "type": "array",
          "description": "Limit List",
          "items": {
            "$ref": "#/definitions/apiupdatebetlimit_limit"
          }
        }
      }
    },
    "body_10": {
      "required": ["channelId", "signature", "timestamp"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "roundCode": {
          "$ref": "#/definitions/roundCode"
        },
        "betHistoryId": {
          "type": "string",
          "example": "5e0d696b2fdda1335fa68243",
          "description": "Bet Record ID.\n Must take username and roundCode if not take this parameter."
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "lang": {
          "type": "string",
          "example": "en_us",
          "description": "Language code. Default English."
        }
      }
    },
    "body_11": {
      "required": ["channelId", "signature", "timestamp"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature2"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "subChannelId": {
          "$ref": "#/definitions/subChannelId"
        },
        "startTimeStr": {
          "$ref": "#/definitions/startTimeStr"
        },
        "endTimeStr": {
          "$ref": "#/definitions/endTimeStr"
        },
        "pageNum": {
          "$ref": "#/definitions/pageNum"
        },
        "pageSize": {
          "$ref": "#/definitions/pageSize"
        },
        "tradeType": {
          "type": "array",
          "example": [23, 24],
          "description": "Transaction record",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "body_12": {
      "required": ["channelId", "signature", "timestamp"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        },
        "username": {
          "$ref": "#/definitions/username"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "subChannelId": {
          "$ref": "#/definitions/subChannelId"
        },
        "startTimeStr": {
          "$ref": "#/definitions/startTimeStr"
        },
        "endTimeStr": {
          "$ref": "#/definitions/endTimeStr"
        },
        "pageNum": {
          "$ref": "#/definitions/pageNum"
        },
        "pageSize": {
          "$ref": "#/definitions/pageSize"
        },
        "gameType": {
          "type": "integer",
          "example": 1,
          "description": "Game type"
        },
        "judgeTime": {
          "type": "integer",
          "example": 1,
          "description": "Judgment query time. Default is 1\n 0: Payout time\n 1: Bet time"
        }
      }
    },
    "body_13": {
      "required": ["channelId", "endTimeStr", "pageNum", "pageSize", "signature", "startTimeStr", "timestamp"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "type": "string",
          "example": "ZwV0Upcy93v3S/ChPh/K4FtbQ3VfA9bVomRZxBhp7I/nh2P0+qwl+dfax4QZrLwT3TuFIJGv1+nWBb+oTN5bdg==",
          "description": "Signature. String splicing :channelId+timestamp"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "subChannelId": {
          "$ref": "#/definitions/subChannelId"
        },
        "startTimeStr": {
          "$ref": "#/definitions/startTimeStr"
        },
        "endTimeStr": {
          "$ref": "#/definitions/endTimeStr"
        },
        "pageNum": {
          "$ref": "#/definitions/pageNum"
        },
        "pageSize": {
          "$ref": "#/definitions/pageSize"
        },
        "judgeTime": {
          "type": "integer",
          "example": 1,
          "description": "Judgment query time. Default is 1\n 0: Payout time\n 1: Bet time"
        }
      }
    },
    "body_14": {
      "required": ["channelId", "signature", "timestamp", "username"],
      "properties": {
        "username": {
          "$ref": "#/definitions/username"
        },
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature2"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      }
    },
    "body_15": {
      "required": ["channelId", "gameID", "loginEventType", "providerId", "signature", "timestamp", "username"],
      "properties": {
        "username": {
          "$ref": "#/definitions/username"
        },
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        },
        "gameID": {
          "type": "string",
          "example": "dragon-tiger-luck",
          "description": "slot game id"
        },
        "providerId": {
          "type": "string",
          "example": "pgsoft",
          "description": "slot game vendor id"
        },
        "loginEventType": {
          "type": "integer",
          "example": 1,
          "description": "Login method:\n 1: Normal login\n 4: Token login"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "pwd": {
          "type": "string",
          "example": "password",
          "description": "Password for login. Required when loginEventType = 1"
        },
        "token": {
          "type": "string",
          "example": "",
          "description": "AccessToken for login. Required when loginEventType = 4"
        },
        "ip": {
          "type": "string",
          "example": "127.0.0.1",
          "description": "Login IP"
        },
        "language": {
          "type": "string",
          "example": "en_us",
          "description": "User's language"
        }
      }
    },
    "body_16": {
      "required": ["channelId", "signature", "timestamp"],
      "properties": {
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "timestamp": {
          "$ref": "#/definitions/timestamp"
        },
        "signature": {
          "type": "string",
          "example": "ZwV0Upcy93v3S/ChPh/K4FtbQ3VfA9bVomRZxBhp7I/nh2P0+qwl+dfax4QZrLwT3TuFIJGv1+nWBb+oTN5bdg==",
          "description": "Signature. String splicing :channelId+timestamp"
        }
      }
    },
    "body_17": {
      "required": ["accessToken", "channelId", "signature", "timestamp", "username"],
      "properties": {
        "username": {
          "$ref": "#/definitions/username"
        },
        "channelId": {
          "$ref": "#/definitions/channelId"
        },
        "subChannelId": {
          "$ref": "#/definitions/subChannelId"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "example": 1987654321,
          "description": "Current time. In seconds. Format is Unix Time."
        },
        "accessToken": {
          "type": "string",
          "example": "accessToken",
          "description": "This parameter value is provided by the channel"
        },
        "signature": {
          "type": "string",
          "example": "ZwV0Upcy93v3S/ChPh/K4FtbQ3VfA9bVomRZxBhp7I/nh2P0+qwl+dfax4QZrLwT3TuFIJGv1+nWBb+oTN5bdg==",
          "description": "Signature. String splicing :username+channelId+accessToken+timestamp"
        }
      }
    },
    "betHistories_payoutDetail": {
      "type": "object",
      "properties": {
        "bet item code": {
          "type": "number",
          "format": "double",
          "example": 20.0
        }
      },
      "description": "Payout amount for each bet item.\n Sic Bo's 155.156 will be followed by the number of open dice points, for example \"155: 1,1,6\": 100.\n Betting items on the roulette are followed by points or betTypeInterval codes, such as \"200: 17\": 3600, \"207: 1\": 300, \"201: 14,17\": 1800."
    },
    "betHistories_niuniuResult": {
      "type": "object",
      "properties": {
        "banker": {
          "type": "integer",
          "description": "Combination code for banker."
        },
        "player1": {
          "type": "integer",
          "description": "Combination code for player 1."
        },
        "player2": {
          "type": "integer",
          "description": "Combination code for player 2."
        },
        "player3": {
          "type": "integer",
          "description": "Combination code for player 3."
        },
        "isWin": {
          "type": "boolean",
          "description": "Whether win"
        }
      },
      "description": "Only niuniu. Niuniu's results record."
    },
    "betHistories_niuniuWithHoldingDetail": {
      "type": "object",
      "properties": {
        "302": {
          "type": "number",
          "format": "double",
          "description": "Withholding amount for bet item \"Player 1 Double\""
        },
        "304": {
          "type": "number",
          "format": "double",
          "description": "Withholding amount for bet item \"Player 2 Double\""
        },
        "306": {
          "type": "number",
          "format": "double",
          "description": "Withholding amount for bet item \"Player 3 Double\""
        }
      },
      "description": "Only niuniu. Niuniu's withholding details."
    }
  }
}